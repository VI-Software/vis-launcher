name: Pull Request Automation

on:
  pull_request_target:
    types: [opened, synchronize, reopened, edited, labeled, unlabeled]

jobs:
  triage:
    name: PR Triage
    runs-on: ubuntu-latest
    steps:
      - name: Send CLA and Code of Conduct message on PR open
        if: github.event.action == 'opened'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const prAuthor = context.payload.pull_request.user.login;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Hi @${prAuthor}, thanks so much for opening this pull request and contributing to VIS Launcher! ðŸŽ‰

            Before we get started with the review, could you please take a quick look at these important documents?

            - [Contributor License Agreement](https://docs.visoftware.dev/vi-software/guidelines/contributor-license-agreement): By submitting your PR, you agree to this agreement so we can properly include your work.
            - [Code of Conduct](https://docs.visoftware.dev/vi-software/guidelines/code-of-conduct): We want to make sure everyone feels welcome and respected here.

            If you have any questions or need help, just let us know. We really appreciate your contribution and look forward to working with you! ðŸš€`
            });

      - name: Label PR based on title
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const title = context.payload.pull_request.title.toLowerCase();
            let labelsToAdd = [];
            
            // Label based on PR title patterns
            if (title.includes('feat') || title.includes('feature') || title.includes('add')) {
              labelsToAdd.push('enhancement');
            } else if (title.includes('fix') || title.includes('bug') || title.includes('issue')) {
              labelsToAdd.push('bug');
            } else if (title.includes('docs') || title.includes('documentation')) {
              labelsToAdd.push('documentation');
            } else if (title.includes('crash')) {
              labelsToAdd.push('crash');
            } else if (title.includes('chore') || title.includes('refactor')) {
              labelsToAdd.push('dependencies');
            } else if (title.includes('question') || title.includes('?')) {
              labelsToAdd.push('question');
            }
            
            if (labelsToAdd.length > 0) {
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labelsToAdd
              });
            }

      - name: Add size label
        uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          xs_label: 'size/xs'
          xs_max_size: '10'
          s_label: 'size/s'
          s_max_size: '100'
          m_label: 'size/m'
          m_max_size: '500'
          l_label: 'size/l'
          l_max_size: '1000'
          xl_label: 'size/xl'
          fail_if_xl: 'false'
          message_if_xl: 'This PR exceeds the recommended size of 1000 lines. Please consider splitting it into smaller PRs.'
      
      - name: Assign author
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const author = context.payload.pull_request.user.login;
            github.rest.issues.addAssignees({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignees: [author]
            });